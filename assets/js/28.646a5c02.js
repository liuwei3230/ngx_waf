(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{403:function(_,v,e){"use strict";e.r(v);var t=e(45),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"配置语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置语法"}},[_._v("#")]),_._v(" 配置语法")]),_._v(" "),e("h2",{attrs:{id:"waf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#waf"}},[_._v("#")]),_._v(" "),e("code",[_._v("waf")])]),_._v(" "),e("ul",[e("li",[_._v("配置语法: "),e("code",[_._v("waf [on|off];")])]),_._v(" "),e("li",[_._v("默认配置："),e("code",[_._v("waf off;")])]),_._v(" "),e("li",[_._v("配置段: server")])]),_._v(" "),e("p",[_._v("是否启用本模块。")]),_._v(" "),e("h2",{attrs:{id:"waf-rule-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#waf-rule-path"}},[_._v("#")]),_._v(" "),e("code",[_._v("waf_rule_path")])]),_._v(" "),e("ul",[e("li",[_._v("配置语法: "),e("code",[_._v("waf_rule_path <dir>;")])]),_._v(" "),e("li",[_._v("默认配置：——")]),_._v(" "),e("li",[_._v("配置段: server")])]),_._v(" "),e("p",[_._v("规则文件所在目录，且必须以"),e("code",[_._v("/")]),_._v("结尾。")]),_._v(" "),e("h2",{attrs:{id:"waf-mode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#waf-mode"}},[_._v("#")]),_._v(" "),e("code",[_._v("waf_mode")])]),_._v(" "),e("ul",[e("li",[_._v("配置语法: "),e("code",[_._v("waf_mode <mode_type> ...;")])]),_._v(" "),e("li",[_._v("默认配置：——")]),_._v(" "),e("li",[_._v("配置段: server")])]),_._v(" "),e("p",[_._v("指定防火墙的工作模式，至少指定一个模式，最多指定八个模式。")]),_._v(" "),e("p",[e("code",[_._v("mode_type")]),_._v("具有下列取值（不区分大小写）:")]),_._v(" "),e("ul",[e("li",[_._v("GET: 当"),e("code",[_._v("Http.Method=GET")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("HEAD: 当"),e("code",[_._v("Http.Method=HEAD")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("POST: 当"),e("code",[_._v("Http.Method=POST")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("PUT: 当"),e("code",[_._v("Http.Method=PUT")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("DELETE: 当"),e("code",[_._v("Http.Method=DELETE")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("MKCOL: 当"),e("code",[_._v("Http.Method=MKCOL")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("COPY: 当"),e("code",[_._v("Http.Method=COPY")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("MOVE: 当"),e("code",[_._v("Http.Method=MOVE")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("OPTIONS: 当"),e("code",[_._v("Http.Method=OPTIONS")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("PROPFIN: 当"),e("code",[_._v("Http.Method=PROPFIN")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("PROPPATCH: 当"),e("code",[_._v("Http.Method=PROPPATCH")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("LOCK: 当"),e("code",[_._v("Http.Method=LOCK")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("UNLOCK: 当"),e("code",[_._v("Http.Method=UNLOCK")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("PATCH: 当"),e("code",[_._v("Http.Method=PATCH")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("TRAC: 当"),e("code",[_._v("Http.Method=TRAC")]),_._v("时启动检查。")]),_._v(" "),e("li",[_._v("IP: 启用 IP 地址的检查规则。")]),_._v(" "),e("li",[_._v("URL: 启用 url 的检查规则。")]),_._v(" "),e("li",[_._v("RBODY: 启用 POST 请求体的检查规则。")]),_._v(" "),e("li",[_._v("ARGS: 启用 args 的检查规则。")]),_._v(" "),e("li",[_._v("UA: 启用 user-agent 的检查规则。")]),_._v(" "),e("li",[_._v("COOKIE: 启用 cookie 的检查规则。")]),_._v(" "),e("li",[_._v("REFERER: 启用 referer 的检查规则。")]),_._v(" "),e("li",[_._v("CC: 启用 CC 防御。当你启用了此模式，你必须设置 "),e("a",{attrs:{href:"#waf-cc-deny-limit"}},[_._v("waf_cc_deny_limit")]),_._v("。")]),_._v(" "),e("li",[_._v("COMPAT：兼容模式，用来启用一些兼容性选项去兼容其它的模块或者环境，目前用于兼容 ngx_http_rewrite_module，详见"),e("RouterLink",{attrs:{to:"/zh-cn/guide/compatibility.html"}},[_._v("兼容性说明")]),_._v("。")],1),_._v(" "),e("li",[_._v("STRICT：严格模式，牺牲一些性能进行更多的检查，目前仅在启用了 "),e("code",[_._v("COMPAT")]),_._v(" 模式时生效，在 ngx_http_rewrite_module 生效前和生效后都进行一轮完整的检查。")]),_._v(" "),e("li",[_._v("STD: 标准工作模式，等价于 "),e("code",[_._v("HEAD GET POST IP URL RBODY ARGS UA CC COMPAT")]),_._v("。")]),_._v(" "),e("li",[_._v("STATIC：适用于静态站点的工作模式，等价于 "),e("code",[_._v("HEAD GET IP URL UA CC")]),_._v("。")]),_._v(" "),e("li",[_._v("DYNAMIC：适用于动态站点的工作模式，等价于 "),e("code",[_._v("HEAD GET POST IP URL ARGS UA RBODY COOKIE CC COMPAT")]),_._v("。")]),_._v(" "),e("li",[_._v("FULL: 启用所有的模式。")])]),_._v(" "),e("p",[_._v("您可以通过在某个 "),e("code",[_._v("mode_type")]),_._v(" 前增加 "),e("code",[_._v("!")]),_._v(" 前缀来关闭该模式，下面是一个例子。\n表示使用标准的工作模式，但是不检查 User-Agent。")]),_._v(" "),e("div",{staticClass:"language-nginx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-nginx"}},[e("code",[_._v("waf_mode STD "),e("span",{pre:!0,attrs:{class:"token operator"}},[_._v("!")]),_._v("UA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[_._v("注意")]),_._v(" "),e("p",[e("code",[_._v("CC")]),_._v("是独立于其它模式的模式，其生效与否不受到其它模式的影响。典型情况如"),e("code",[_._v("URL")]),_._v("模式会受到"),e("code",[_._v("GET")]),_._v("模式的影响，因为如果不使用"),e("code",[_._v("GET")]),_._v("模式，那么在收到"),e("code",[_._v("GET")]),_._v("请求时就不会启动检查，自然也就不会检查 URL，但是"),e("code",[_._v("CC")]),_._v("模式不会受到类似的影响。")])]),_._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[_._v("开发版中的变动")]),_._v(" "),e("p",[_._v("增加了一个的模式：")]),_._v(" "),e("ul",[e("li",[_._v("CACHE: 启用缓存。启用此模式后会缓存检查的结果，下次检查相同的目标时就不需要重复检查了。不过不会缓存 POST 体的检查结果。比如一个 URL 经过检查后并没有在黑名单中，那么下次检查相同的 URL 时就无需再次检查 URL 黑名单了。当你启用了此模式，你必须设置 "),e("a",{attrs:{href:"#waf-cache-size"}},[_._v("waf_cache_size")]),_._v("。")])]),_._v(" "),e("p",[_._v("下列模式有变化：")]),_._v(" "),e("ul",[e("li",[_._v("STD：标准工作模式，等价于 "),e("code",[_._v("HEAD GET POST IP URL RBODY ARGS UA CC COMPAT CACHE")]),_._v("。")]),_._v(" "),e("li",[_._v("STATIC：适用于静态站点的工作模式，等价于 "),e("code",[_._v("HEAD GET IP URL UA CC CACHE")]),_._v("。")]),_._v(" "),e("li",[_._v("DYNAMIC：适用于动态站点的工作模式，等价于 "),e("code",[_._v("HEAD GET POST IP URL ARGS UA RBODY COOKIE CC COMPAT CACHE")]),_._v("。")])])]),_._v(" "),e("h2",{attrs:{id:"waf-cc-deny-limit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#waf-cc-deny-limit"}},[_._v("#")]),_._v(" "),e("code",[_._v("waf_cc_deny_limit")])]),_._v(" "),e("ul",[e("li",[_._v("配置语法: "),e("code",[_._v("waf_cc_deny_limit <rate> <duration> [buffer_size]")]),_._v(";")]),_._v(" "),e("li",[_._v("默认配置：——")]),_._v(" "),e("li",[_._v("配置段: server")])]),_._v(" "),e("p",[_._v("设置 CC 防护相关的参数。")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("rate")]),_._v(":表示每分钟的最多请求次数（大于零的整数）。")]),_._v(" "),e("li",[e("code",[_._v("duration")]),_._v(":表示超出第一个参数 "),e("code",[_._v("rate")]),_._v(" 的限制后拉黑 IP 多少分钟（大于零的整数）.")]),_._v(" "),e("li",[e("code",[_._v("buffer_size")]),_._v("：用于设置记录 IP 访问次数的内存的大小，如 "),e("code",[_._v("10m")]),_._v("、"),e("code",[_._v("10240k")]),_._v("，不得小于 "),e("code",[_._v("10m")]),_._v("，如不指定则默认为 "),e("code",[_._v("10m")]),_._v("。")])]),_._v(" "),e("h2",{attrs:{id:"waf-cache-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#waf-cache-size"}},[_._v("#")]),_._v(" "),e("code",[_._v("waf_cache_size")])]),_._v(" "),e("ul",[e("li",[_._v("配置语法: "),e("code",[_._v("waf_cache_size buffer_size")]),_._v(";")]),_._v(" "),e("li",[_._v("默认配置：——")]),_._v(" "),e("li",[_._v("配置段: server")])]),_._v(" "),e("p",[_._v("设置用于缓存检查结果的内存的大小。如 "),e("code",[_._v("10m")]),_._v("、"),e("code",[_._v("10240k")]),_._v("，不得小于 "),e("code",[_._v("10m")]),_._v("，如不指定则默认为 "),e("code",[_._v("10m")]),_._v("。")]),_._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[_._v("注意")]),_._v(" "),e("p",[_._v("建议根据实际情况设置缓存空间的大小。因为如果内存空间不够大会会频繁删除缓存，反而降低了性能。")]),_._v(" "),e("p",[_._v("您可以通过观察"),e("RouterLink",{attrs:{to:"/zh-cn/advance/log.html"}},[_._v("调试日志")]),_._v("，检查下面这一行日志是否经常出现。\n如果几乎每次请求都会出现请适当增加缓存空间的大小。")],1),_._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("ngx_slab_alloc() failed: no memory\n")])])])]),_._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[_._v("警告")]),_._v(" "),e("p",[_._v("本配置属于开发版新增的功能，只能在开发版中使用，等稳定后会合并到稳定版中。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);